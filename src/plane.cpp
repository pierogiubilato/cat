//------------------------------------------------------------------------------
// CAT - C++ Analysis Template - plane geometrical object                     --
// (C) Piero Giubilato 2011-2024, INFN PD									  --
//------------------------------------------------------------------------------

//______________________________________________________________________________
// [File name]		"plane.cpp"
// [Author]			"Piero Giubilato"
// [Version]		"0.1"
// [Modified by]	"Piero Giubilato"
// [Date]	        "13 Aug 2024"
// [Language]		"C++"
//______________________________________________________________________________


// Application units
#include "../include/plane.hpp"
#include "../include/caf.hpp"



// *****************************************************************************
// **                            Special members                              **
// *****************************************************************************

//______________________________________________________________________________
cat::plane::plane() : _pos(0, 0, 0), _norm(0, 0, 0)
{
    /* Default ctor. */
}

//______________________________________________________________________________
cat::plane::plane(const coord& p, const coord& n) : _pos(p), _norm(n)
{
    /*! Plane coordinates ctor. */
}

//______________________________________________________________________________
cat::plane::plane(const cat::plane& pl)
    : _pos(pl._pos), _norm(pl._norm)
{
    /*! Copy ctor. */
}

//______________________________________________________________________________
cat::plane::~plane()
{
    /*! Dtor. Nothing really to do, all members are managed. */
}


// *****************************************************************************
// **                            Private members                              **
// *****************************************************************************


// *****************************************************************************
// **                           Operators overload                            **
// *****************************************************************************


//______________________________________________________________________________
std::ostream& operator<<(std::ostream& os, const cat::plane& pl)
{
    // Build (x, y, z) like string.
    os << "[" << pl.pos() << ", " << pl.norm() << "]";
    
    // Return.
    return os;
}


//______________________________________________________________________________
cat::plane& cat::plane::operator=(const cat::plane& pl)
{
    /*! Copy operator. */
    _pos = pl._pos;
    _norm = pl._norm;
    
    // Return.
    return *this;
}



// *****************************************************************************
// **                             Public members                              **
// *****************************************************************************


//______________________________________________________________________________
cat::coord cat::plane::pos() const
{
    /* Returns the plane posiiton in space. */
    return _pos;
}


//______________________________________________________________________________
void cat::plane::pos(const cat::coord& p)
{
    /* Set the plane reference position in space. */
    _pos = p;
}


//______________________________________________________________________________
cat::coord cat::plane::norm() const
{
    /* Returns the plane orientation in space. */
    return _norm;
}


//______________________________________________________________________________
void cat::plane::norm(const cat::coord& n)
{
    /* Set the plane orientation in space. */
    _norm = n;
}


